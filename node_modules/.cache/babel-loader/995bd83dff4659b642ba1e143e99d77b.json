{"ast":null,"code":"import * as types from '../types/testApi.types';\nimport axios from 'axios';\nimport setup from '../../environment';\nconst services = setup.API_URL;\nexport const getRequest = () => {\n  return dispatch => {\n    dispatch(getLoading());\n    return axios.get(services).then(res => {\n      dispatch(getSuccess(res.data));\n    });\n  };\n};\nexport const getLoading = () => {\n  return {\n    type: types.testApi.GET_LOADING\n  };\n};\nexport const getSuccess = data => {\n  return {\n    type: types.testApi.GET_SUCCESS,\n    payload: data\n  };\n};","map":{"version":3,"sources":["/Users/didikirawan/Documents/Binar/cra-redux-boilerplate/src/redux/actions/testApi.action.js"],"names":["types","axios","setup","services","API_URL","getRequest","dispatch","getLoading","get","then","res","getSuccess","data","type","testApi","GET_LOADING","GET_SUCCESS","payload"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,OAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,UAAU,EAAX,CAAR;AACA,WAAON,KAAK,CAACO,GAAN,CAAUL,QAAV,EACFM,IADE,CACGC,GAAG,IAAI;AACTJ,MAAAA,QAAQ,CAACK,UAAU,CAACD,GAAG,CAACE,IAAL,CAAX,CAAR;AACH,KAHE,CAAP;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAML,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHM,IAAAA,IAAI,EAAEb,KAAK,CAACc,OAAN,CAAcC;AADjB,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMJ,UAAU,GAAIC,IAAD,IAAU;AAChC,SAAO;AACHC,IAAAA,IAAI,EAAEb,KAAK,CAACc,OAAN,CAAcE,WADjB;AAEHC,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH,CALM","sourcesContent":["import * as types from '../types/testApi.types';\nimport axios from 'axios';\nimport setup from '../../environment'\n\nconst services = setup.API_URL\n\nexport const getRequest = () => {\n    return dispatch => {\n        dispatch(getLoading())\n        return axios.get(services)\n            .then(res => {\n                dispatch(getSuccess(res.data))\n            })\n    }\n}\n\nexport const getLoading = () => {\n    return {\n        type: types.testApi.GET_LOADING\n    }\n}\n\nexport const getSuccess = (data) => {\n    return {\n        type: types.testApi.GET_SUCCESS,\n        payload: data\n    }\n}"]},"metadata":{},"sourceType":"module"}