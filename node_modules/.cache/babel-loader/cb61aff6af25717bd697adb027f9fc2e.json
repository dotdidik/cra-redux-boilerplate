{"ast":null,"code":"import _defineProperty from \"/Users/didikirawan/Documents/Binar/cra-redux-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../types/penjumlahan';\nconst initialState = {\n  value: 0\n};\nexport default function penjumlahan(state = initialState, action) {\n  switch (action.type) {\n    case types.penjumlahan.INCRENMENT:\n      return _objectSpread({}, state, {\n        value: state.value + 1\n      });\n\n    case types.penjumlahan.DECREMENT:\n      return _objectSpread({}, state, {\n        value: state.value - 1\n      });\n\n    case types.penjumlahan.RESET:\n      return _objectSpread({}, state, {\n        value: 0\n      });\n\n    default:\n      return initialState;\n  }\n}","map":{"version":3,"sources":["/Users/didikirawan/Documents/Binar/cra-redux-boilerplate/src/redux/reducers/penjumlahan.js"],"names":["types","initialState","value","penjumlahan","state","action","type","INCRENMENT","DECREMENT","RESET"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,sBAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2CI,MAA3C,EAAmD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACG,WAAN,CAAkBI,UAAvB;AACE,+BACKH,KADL;AAEEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAa;AAFtB;;AAKF,SAAKF,KAAK,CAACG,WAAN,CAAkBK,SAAvB;AACE,+BACKJ,KADL;AAEEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFvB;;AAIF,SAAKF,KAAK,CAACG,WAAN,CAAkBM,KAAvB;AACE,+BACKL,KADL;AAEEF,QAAAA,KAAK,EAAE;AAFT;;AAKF;AACE,aAAOD,YAAP;AAnBJ;AAqBD","sourcesContent":["import * as types from '../types/penjumlahan';\n\nconst initialState = {\n    value: 0\n}\n\nexport default function penjumlahan(state = initialState, action) {\n  switch (action.type) {\n    case types.penjumlahan.INCRENMENT:\n      return {\n        ...state,\n        value: state.value +1\n      }\n\n    case types.penjumlahan.DECREMENT:\n      return {\n        ...state,\n        value: state.value - 1\n      }\n    case types.penjumlahan.RESET:\n      return {\n        ...state,\n        value: 0\n      }\n\n    default:\n      return initialState\n  }\n}"]},"metadata":{},"sourceType":"module"}